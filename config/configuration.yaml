# Loads default set of integrations. Do not remove.
default_config:

# Load frontend themes from the themes folder
frontend:
  themes: !include_dir_merge_named themes
  extra_module_url:
    - hacsfiles/lovelace-card-mod/card-mod.js

automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
input_select: !include input_select.yaml

# sensor data for 14 days
recorder:
  purge_keep_days: 14

rest:
  - resource: https://api.tibber.com/v1-beta/gql
    method: POST
    payload: '{ "query": "{ viewer { homes { currentSubscription { status priceInfo { current { total } today { total } tomorrow { total } } } } } }" }'
    headers:
      Authorization: !secret tibber_api_key
      Content-Type: application/json
      User-Agent: REST
    scan_interval: 300
    sensor:
      - name: "Electricity price Prognose XXX"
        unique_id: sensor.electricity_price_prognose_xxx
        json_attributes_path: "$.data.viewer.homes[0].currentSubscription.priceInfo"
        json_attributes:
          - today
          - tomorrow
        value_template: "{{ value_json.data.viewer.homes[0].currentSubscription.priceInfo.current.total | float }}"
        unit_of_measurement: EUR/kWh

logger:
  default: warning
  # logs:
  #  custom_components.sax_battery: debug
  #  custom_components.sax_battery.items: debug
  #  custom_components.sax_battery.coordinator: debug
  #  pymodbus: error
  # logs:
  #    pyeasee: debug
  #    custom_components.easee: debug
  filters:
    custom_components.solarman.solarman:
      - "Querying .1024 - 1070. failed" # NoSocketAvailableError, Empty
      - "Querying registers .1024 - 1070. failed"
      - "Update of sensor.solarman_pv1_power is taking over 10 seconds"
    bluetooth_auto_recovery.recove:
      - "Could not cycle the Bluetooth adapter hci0"
      - "Could not reset the power state of the Bluetooth adapter hci0"
    habluetooth.scanner:
      - "Successful fall-back to passive scanning mode after active scanning failed"

logbook:
  exclude:
    entities:
      - sensor.solarman_status_lastupdate
      - sensor.poweropti_cloud

# modbus: !include modbus.yaml
template: !include templates.yaml
sensor: !include sensors.yaml

climate:
  - platform: generic_thermostat
    name: Infrarotheizung Hobbyraum
    heater: switch.hobbyraum_steckdose
    target_sensor: sensor.hobbyraum_temperatur
    min_cycle_duration:
      minutes: 5
    hot_tolerance: 1
    ac_mode: false
    cold_tolerance: 1
    unique_id: hobbyraum_heizung

binary_sensor:
  - platform: tod
    name: Night
    after: sunset
    before: sunrise

http:
  use_x_forwarded_for: true
  trusted_proxies:
    - 172.30.33.0/24
  ip_ban_enabled: true
  login_attempts_threshold: 5

notify:
  - name: BERT_DEVICES
    platform: group
    services:
      - service: mobile_app_berts_iphone
      - service: mobile_app_berts_ipad
